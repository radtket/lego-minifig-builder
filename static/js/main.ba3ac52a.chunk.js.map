{"version":3,"sources":["theme/GlobalStyles.js","theme/index.js","components/FormElements.js","components/InputSlider.js","utils/constants.js","components/Sidebar.js","components/MiniFig/UpperBody.js","components/MiniFig/LowerBody.js","components/MiniFig/Faces.js","components/MiniFig/index.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","styledNormalize","theme","spacing","small","base","large","colors","black","white","yellowBright","yellowDark","red","mercury","gray1","gray2","Theme","_ref","children","_jsxs","ThemeProvider","_jsx","GlobalStyles","Button","styled","button","Fieldset","fieldset","Legend","legend","Label","label","RangeInput","input","InputSlider","id","inputProps","htmlFor","name","type","defaultSliderValues","expression","upperHue","upperSaturation","upperLightness","lowerHue","lowerSaturation","lowerLightness","inputConfig","max","min","step","value","Controls","aside","rgba","Sidebar","values","setValues","isExploded","setIsExploded","onChange","_ref2","target","prev","parseInt","getRandomNum","Math","random","onClick","randomize","Object","entries","reduce","all","_ref3","key","ceil","defaultProps","yellowLight","UpperBody","div","position","size","Torso","Arm","LeftArm","RightArm","Hand","LowerBody","Waist","Crotch","Leg","LeftLeg","RightLeg","Head","FacesWrap","Faces","Face","Eye","LeftEye","RightEye","Brow","LeftBrow","RightBrow","Mouth","ClassicFace","SmileFace","LargeSmileFace","WorriedFace","FrownFace","SurprisedFace","classic","smile","smileLarge","worried","frown","surprised","MiniFigure","MiniFig","className","style","transform","FACES","map","color","App","useState","display","justifyContent","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba3ac52a.chunk.js","sourcesContent":["import styledNormalize from \"styled-normalize\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n\t${styledNormalize}\n\n\thtml {\n  \tbox-sizing: border-box;\n\t}\n\n\t*,\n\t*::before,\n\t*::before {\n\t\tbox-sizing: inherit;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\tbody {\n\t\tfont-family: Montserrat, sans-serif;\n\t}\n`;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nexport const theme = {\n  spacing: {\n    small: \"12px\",\n    base: \"24px\",\n    large: \"48px\",\n  },\n  colors: {\n    black: \"#000\",\n    white: \"#fff\",\n    yellowBright: \"#f5d63d\",\n    yellowDark: \"#f2cc0d\",\n    red: \"#c00\",\n    mercury: \"#e6e6e6\",\n    gray1: \"#dedede\",\n    gray2: \"#cccccc\",\n  },\n};\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    {children}\n  </ThemeProvider>\n);\n\nTheme.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Theme;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\n\nconst { white, black, yellowDark, gray1, gray2 } = theme.colors;\n\nexport const Button = styled.button`\n  background-color: ${white};\n  border-radius: 0.5em;\n  border: 1px solid ${gray1};\n  color: #666;\n  cursor: pointer;\n  font-family: inherit;\n  letter-spacing: 0.0625em;\n  margin: 0.25rem 0;\n  outline: none;\n  padding: 0.5em 1em;\n  text-transform: uppercase;\n  width: 100%;\n\n  &:hover {\n    color: ${black};\n    border-color: ${gray2};\n  }\n\n  &:active {\n    background-color: ${gray1};\n  }\n`;\n\nexport const Fieldset = styled.fieldset`\n  border: none;\n  margin: 1rem 0;\n`;\n\nexport const Legend = styled.legend`\n  margin-bottom: 1rem;\n  font-weight: bold;\n  font-size: small;\n  letter-spacing: 0.03125em;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: x-small;\n  letter-spacing: 0.0625em;\n`;\n\nexport const RangeInput = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  background-color: currentColor;\n  border-radius: 1em;\n  color: inherit;\n  height: 2em;\n  margin: 0.25rem 0 1rem;\n  outline: none;\n  padding: 0.375em;\n  position: relative;\n  width: 100%;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    position: relative;\n    z-index: 10;\n    width: 1.5em;\n    height: 1.5em;\n    background-color: ${yellowDark};\n    border-radius: 50%;\n    cursor: pointer;\n  }\n\n  &::-moz-range-thumb {\n    position: relative;\n    z-index: 10;\n    width: 1.5em;\n    height: 1.5em;\n    background-color: #333;\n    border-radius: 50%;\n    cursor: pointer;\n  }\n\n  &::-moz-range-track {\n    background-color: transparent;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, RangeInput } from \"./FormElements\";\n\nconst InputSlider = ({ label, id, inputProps }) => (\n  <Label htmlFor={id}>\n    {label}\n    <RangeInput id={id} name={id} type=\"range\" {...inputProps} />\n  </Label>\n);\n\nInputSlider.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  inputProps: PropTypes.shape({\n    max: PropTypes.number,\n    min: PropTypes.number,\n    step: PropTypes.number,\n    type: PropTypes.string,\n    value: PropTypes.number,\n    onChange: PropTypes.func,\n  }).isRequired,\n};\n\nexport default InputSlider;\n","export const defaultSliderValues = {\n  expression: 0,\n  upperHue: 200,\n  upperSaturation: 50,\n  upperLightness: 90,\n  lowerHue: 200,\n  lowerSaturation: 50,\n  lowerLightness: 90,\n};\n\nexport const inputConfig = {\n  expression: {\n    max: 500,\n    min: 0,\n    step: 100,\n    value: 0,\n  },\n  upperHue: {\n    max: 360,\n    min: 0,\n    value: 200,\n  },\n  upperSaturation: {\n    max: 100,\n    min: 0,\n    value: 50,\n  },\n  upperLightness: {\n    max: 90,\n    min: 0,\n    value: 90,\n  },\n  lowerHue: {\n    max: 360,\n    min: 0,\n    value: 200,\n  },\n  lowerSaturation: {\n    max: 100,\n    min: 0,\n    value: 50,\n  },\n  lowerLightness: {\n    max: 90,\n    min: 0,\n    value: 90,\n  },\n};\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { rgba } from \"polished\";\nimport { Button, Fieldset, Legend } from \"./FormElements\";\nimport InputSlider from \"./InputSlider\";\nimport { defaultSliderValues, inputConfig } from \"../utils/constants\";\nimport { theme } from \"../theme\";\n\nconst { gray1 } = theme.colors;\n\nconst Controls = styled.aside`\n  background-color: ${rgba(gray1, 0.5)};\n  color: #333;\n  padding: 1.5em;\n  position: relative;\n  text-transform: uppercase;\n  width: 200px;\n  z-index: 1;\n\n  h2 {\n    font-size: 1.25em;\n    font-weight: 900;\n    letter-spacing: 0.03125em;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Sidebar = ({ values, setValues, isExploded, setIsExploded }) => {\n  const onChange = ({ target: { name, value } }) => {\n    setValues((prev) => ({\n      ...prev,\n      [name]: parseInt(value, 10),\n    }));\n  };\n\n  const getRandomNum = (min, max) => Math.random() * (max - min) + min;\n\n  const randomize = () => {\n    setValues(\n      Object.entries(inputConfig).reduce(\n        (all, [key, { min, max }]) => ({\n          ...all,\n          [key]:\n            key !== \"expression\"\n              ? getRandomNum(min, max)\n              : Math.ceil((getRandomNum(0, 5) * 100) / 100) * 100,\n        }),\n        values\n      )\n    );\n  };\n\n  return (\n    <Controls>\n      <h2>Controls</h2>\n      <Button onClick={() => setIsExploded(!isExploded)} type=\"button\">\n        {isExploded ? \"Rebuild\" : \"Explode\"}\n      </Button>\n      <Button onClick={randomize} type=\"button\">\n        Randomize\n      </Button>\n      <Button\n        onClick={() => {\n          setValues({ ...defaultSliderValues });\n        }}\n        type=\"button\"\n      >\n        Reset\n      </Button>\n      <Fieldset>\n        <Legend>Head</Legend>\n        <InputSlider\n          id=\"expression\"\n          inputProps={{\n            ...inputConfig.expression,\n            value: values.expression,\n            onChange,\n          }}\n          label=\"Expression\"\n        />\n      </Fieldset>\n\n      <Fieldset>\n        <Legend>Upper Body</Legend>\n        <InputSlider\n          id=\"upperHue\"\n          inputProps={{\n            ...inputConfig.upperHue,\n            value: values.upperHue,\n            onChange,\n          }}\n          label=\"Hue\"\n        />\n        <InputSlider\n          id=\"upperSaturation\"\n          inputProps={{\n            ...inputConfig.upperSaturation,\n            value: values.upperSaturation,\n            onChange,\n          }}\n          label=\"Saturation\"\n        />\n        <InputSlider\n          id=\"upperLightness\"\n          inputProps={{\n            ...inputConfig.upperLightness,\n            value: values.upperLightness,\n            onChange,\n          }}\n          label=\"Lightness\"\n        />\n      </Fieldset>\n\n      <Fieldset>\n        <Legend>Lower Body</Legend>\n        <InputSlider\n          id=\"lowerHue\"\n          inputProps={{\n            ...inputConfig.lowerHue,\n            value: values.lowerHue,\n            onChange,\n          }}\n          label=\"Hue\"\n        />\n        <InputSlider\n          id=\"lowerSaturation\"\n          inputProps={{\n            ...inputConfig.lowerSaturation,\n            value: values.lowerSaturation,\n            onChange,\n          }}\n          label=\"Saturation\"\n        />\n        <InputSlider\n          id=\"lowerLightness\"\n          inputProps={{\n            ...inputConfig.lowerLightness,\n            value: values.lowerLightness,\n            onChange,\n          }}\n          label=\"Lightness\"\n        />\n      </Fieldset>\n    </Controls>\n  );\n};\n\nSidebar.propTypes = {\n  values: PropTypes.shape({\n    expression: PropTypes.number,\n    upperHue: PropTypes.number,\n    upperSaturation: PropTypes.number,\n    upperLightness: PropTypes.number,\n    lowerHue: PropTypes.number,\n    lowerSaturation: PropTypes.number,\n    lowerLightness: PropTypes.number,\n  }),\n  setValues: PropTypes.func.isRequired,\n  isExploded: PropTypes.bool.isRequired,\n  setIsExploded: PropTypes.func.isRequired,\n};\n\nSidebar.defaultProps = {\n  values: {\n    ...defaultSliderValues,\n  },\n};\n\nexport default Sidebar;\n","import styled from \"styled-components\";\nimport { position, size, rgba } from \"polished\";\nimport { theme } from \"../../theme\";\n\nconst { white, black, yellowDark, yellowLight, mercury } = theme.colors;\n\nexport const UpperBody = styled.div`\n  ${position(\"absolute\", \"9.25em\", null, null)}\n  color: ${mercury};\n  width: 100%;\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: \"\";\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  &::before {\n    ${size(\"3.5em\", \"3em\")}\n    background-color: currentColor;\n    background-image: linear-gradient(\n        to right,\n        transparent 50%,\n        ${rgba(white, 0.2)},\n        transparent 90%\n      ),\n      linear-gradient(\n        transparent 50%,\n        ${rgba(black, 0.05)} 80%,\n        ${rgba(black, 0.1)}\n      );\n    border-radius: 50% 50% 0 0/10% 10% 0 0;\n    bottom: 100%;\n  }\n\n  &::after {\n    ${size(\"2em\")}\n    background-color: ${rgba(black, 0.9)};\n    background-image: linear-gradient(\n      to right,\n      transparent 50%,\n      ${rgba(white, 0.2)} 80%,\n      transparent\n    );\n    border-radius: 50%/10%;\n    top: -2.75em;\n  }\n`;\n\nexport const Torso = styled.div`\n  ${position(\"absolute\", 0, null, null, \"50%\")}\n  ${size(\"9.125em\", \"7.75em\")}\n  background-color: currentColor;\n  background-image: linear-gradient(\n    ${rgba(white, 0.1)},\n    transparent 80%,\n    ${rgba(black, 0.05)} 98%,\n    ${rgba(black, 0.25)} 100%\n  );\n  border-radius: 0.5em 0.5em 0.125em 0.125em;\n  box-shadow: inset 0 0.25em 0.25em ${rgba(white, 0.5)},\n    -1.5em 0.5em 1em -1.25em ${rgba(black, 0.3)},\n    1.5em 0.5em 1em -1.25em ${rgba(black, 0.3)};\n  transform: translateX(-50%) rotateX(25deg);\n  transform-origin: top center;\n  z-index: 1;\n`;\n\nexport const Arm = styled.div`\n  ${size(\"5.5em\", \"3em\")}\n  ${position(\n    \"absolute\",\n    \"4em\",\n    null,\n    null,\n    \"50%\"\n  )}\n  background-color: currentColor;\n  border-radius: 1.5em/1em;\n  transform-origin: center 1.5em;\n\n  &::before,\n  &::after {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    transform-origin: center 4.5em;\n    content: \"\";\n    background-color: currentColor;\n  }\n\n  &::before {\n    backface-visibility: hidden;\n    border-radius: 1.5em/1.5em 1.5em 1em 1em;\n    bottom: 3.5em;\n    height: 5.5em;\n  }\n\n  &::after {\n    border-radius: 50%;\n    bottom: 0;\n    box-shadow: inset 0 0 0 1em ${rgba(white, 0.2)};\n    height: 1.5em;\n  }\n`;\n\n// Arms\nexport const LeftArm = styled(Arm)`\n  box-shadow: inset -0.5em 0.25em 0.375em -0.25em ${rgba(white, 0.4)},\n    inset 0 0 0.75em 0.75em currentColor, inset 0 0 0 2em ${rgba(white, 0.15)};\n  margin-left: 6.25rem;\n  transform: translateX(-50%) rotate(-12deg);\n\n  &::before {\n    box-shadow: inset -0.75em 0.125em 0.375em -0.5em ${rgba(white, 0.4)},\n      inset -0.25em 1.1em 0.75em 0.75em currentColor,\n      inset 0 0 0 2em ${rgba(white, 0.15)};\n    transform: rotate(-14deg);\n  }\n`;\n\nexport const RightArm = styled(Arm)`\n  box-shadow: inset 0.5em 0.25em 0.375em -0.25em ${rgba(white, 0.4)},\n    inset 0 0 0.75em 0.75em currentColor, inset 0 0 0 2em ${rgba(white, 0.15)};\n  margin-left: -6.25rem;\n  transform: translateX(-50%) rotate(12deg);\n\n  &::before {\n    box-shadow: inset 0.75em 0.125em 0.375em -0.5em ${rgba(white, 0.4)},\n      inset 0.25em 1.1em 0.75em 0.75em currentColor,\n      inset 0 0 0 2em ${rgba(white, 0.15)};\n    transform: rotate(14deg);\n  }\n`;\n\n// Hand\nexport const Hand = styled.div`\n  ${position(\"absolute\", \"80%\", null, null, \"50%\")}\n  ${size(\"1.75em\")}\n  background-color: currentColor;\n  background-image: linear-gradient(\n    to right,\n    ${rgba(white, 0.2)},\n    ${rgba(black, 0.075)},\n    ${rgba(white, 0.2)}\n  );\n  border-radius: 1em/0.5em;\n  box-shadow: 0 -0.125em 0.125em ${rgba(black, 0.1)};\n  color: ${yellowDark};\n  transform: translateX(-50%);\n  z-index: 1;\n\n  &::before {\n    ${position(\"absolute\", \"1em\", null, null, \"50%\")}\n    ${size(\"3.5em\")}\n    border: 0.75em solid;\n    border-bottom-color: transparent;\n    border-radius: 50%;\n    box-shadow: inset 0 0.25em ${rgba(black, 0.15)}, inset 0 0.25em;\n    color: ${yellowLight};\n    content: \"\";\n    transform: translateX(-50%);\n    z-index: 1;\n  }\n`;\n","import styled from \"styled-components\";\nimport { position, size, rgba } from \"polished\";\nimport { theme } from \"../../theme\";\n\nconst { white, black, mercury } = theme.colors;\n\nexport const LowerBody = styled.div`\n  ${position(\"absolute\", \"18.5em\", null, null, \"50%\")};\n  ${size(\"11.75em\", \"10em\")}\n  color: ${mercury};\n  transform: ${({ isExploded }) =>\n    isExploded ? \"translate(-50%, 8em)\" : \"translate(-50%, 0)\"};\n  transition: transform 400ms;\n\n  > div {\n    background-color: currentColor;\n    position: absolute;\n  }\n`;\n\nexport const Waist = styled.div`\n  ${size(\"1.5em\", \"100%\")}\n  background-image: linear-gradient(\n    ${rgba(black, 0.15)},\n    transparent 80%,\n    ${rgba(white, 0.1)} 90%,\n    ${rgba(white, 0.15)}\n  );\n  border-radius: 0.125em;\n  box-shadow: 0 0.75em 0.75em -0.25em ${rgba(black, 0.25)};\n  top: 0;\n  z-index: 1;\n\n  &::before,\n  &::after {\n    ${size(\"3em\")}\n    ${position(\"absolute\", null, null, \"100%\", \"50%\")}\n    background-color: currentColor;\n    content: \"\";\n    transform: translateX(-50%);\n  }\n\n  &::before {\n    background-image: linear-gradient(\n        ${rgba(white, 0.75)},\n        transparent 10%\n      ),\n      linear-gradient(\n        to right,\n        transparent 20%,\n        ${rgba(white, 0.25)} 25%,\n        transparent 40%,\n        transparent 60%,\n        ${rgba(white, 0.25)} 75%,\n        transparent 80%,\n        ${rgba(white, 0.2)}\n      ),\n      linear-gradient(${rgba(white, 0.1)}, ${rgba(black, 0.15)});\n    border-radius: 50% 30% 0 0/100% 30% 0 100%;\n    margin-left: -2.75em;\n  }\n\n  &::after {\n    background-image: linear-gradient(\n        ${rgba(white, 0.75)},\n        transparent 10%\n      ),\n      linear-gradient(\n        to right,\n        transparent 20%,\n        ${rgba(white, 0.25)} 25%,\n        transparent 40%,\n        transparent 60%,\n        ${rgba(white, 0.25)}\n        transparent 80%,\n        ${rgba(white, 0.2)}\n      ),\n      linear-gradient(${rgba(white, 0.1)}, ${rgba(black, 0.15)});\n    border-radius: 30% 50% 0% 0%/30% 100% 100% 0%;\n    margin-left: 2.75em;\n  }\n`;\n\nexport const Crotch = styled.div`\n  ${size(\"4.5em\", \"10%\")}\n  ${position(\"1.5em\", null, null, \"50%\")}\n  z-index: 1;\n  transform: translateX(-50%);\n  background-image: linear-gradient(\n    ${rgba(black, 0.2)},\n    ${rgba(black, 0.05)} 10%,\n    ${rgba(black, 0.2)} 10%,\n    ${rgba(white, 0.1)},\n    ${rgba(black, 0.1)}\n  );\n  border-radius: 0 0 0.25em 0.25em;\n  box-shadow: -0.5em 0 0.25em -0.25em ${rgba(black, 0.15)},\n    0.5em 0 0.25em -0.25em ${rgba(black, 0.15)},\n    -0.25em 0 0.125em -0.125em ${rgba(black, 0.2)},\n    0.25em 0 0.125em -0.125em ${rgba(black, 0.2)};\n`;\n\n// Legs\nexport const Leg = styled.div`\n  ${size(\"10.75em\", \"4.75em\")}\n  ${position(null, null, 0, \"50%\")}\n  background-image: linear-gradient(\n    ${rgba(black, 0.1)} 10%,\n    ${rgba(white, 0.1)} 25%,\n    ${rgba(black, 0.1)} 45%,\n    transparent,\n    50%,\n    ${rgba(black, 0.05)},\n    65%,\n    transparent 74%,\n    ${rgba(black, 0.1)},\n    78%,\n    ${rgba(white, 0.2)} 78%,\n    transparent 82%,\n    ${rgba(black, 0.1)}\n  );\n  border-radius: 0.25em 0.25em 0.0625em 0.0625em;\n  transform: translateX(-50%);\n`;\n\nexport const LeftLeg = styled(Leg)`\n  margin-left: 2.75em;\n`;\n\nexport const RightLeg = styled(Leg)`\n  margin-left: -2.75em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { position, size, rgba } from \"polished\";\nimport { theme } from \"../../theme\";\n\nconst { white, black, yellowDark, red } = theme.colors;\n\nexport const Head = styled.div`\n  ${position(\"absolute\", \"2.25em\", null, null, \"50%\")}\n  ${size(\"6.25em\", \"7.25em\")}\n  background-color: currentColor;\n  background-image: linear-gradient(\n      ${rgba(white, 0.3)},\n      transparent 20%,\n      transparent 80%,\n      ${rgba(black, 0.15)} 95%,\n      ${rgba(black, 0.3)}\n    ),\n    linear-gradient(to right, transparent 50%, ${rgba(white, 0.2)}, transparent);\n  border-radius: 1.5em;\n  color: ${yellowDark};\n  transition: transform 400ms;\n  z-index: 1;\n\n  &::before,\n  &::after {\n    background-color: currentColor;\n    content: \"\";\n    left: 50%;\n    position: absolute;\n  }\n\n  &::before {\n    ${size(\"1.25em\", \"3.5em\")};\n    background-image: linear-gradient(${rgba(white, 0.5)}, transparent 30%),\n      linear-gradient(\n        to right,\n        transparent 70%,\n        ${rgba(white, 0.25)} 80%,\n        transparent 90%\n      );\n    border-radius: 0.25em 0.25em 0 0;\n    top: -1.25em;\n    transform: translateX(-50%);\n  }\n\n  &::after {\n    ${size(\"1em\", \"4.5em\")};\n    background-image: linear-gradient(\n        ${rgba(black, 0.2)},\n        ${rgba(black, 0.05)} 50%\n      ),\n      linear-gradient(\n        to right,\n        transparent 70%,\n        ${rgba(white, 0.25)} 80%,\n        transparent 90%\n      );\n    border-radius: 0 0 0.125em 0.125em;\n    bottom: -1em;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const FacesWrap = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const Faces = styled.div`\n  display: flex;\n  transition: transform 400ms cubic-bezier(0, 0, 0, 1.25);\n`;\n\nconst Face = styled.div`\n  flex: 1 0 100%;\n  position: relative;\n`;\n\nconst Eye = styled.div`\n  ${size(\"0.9375em\", \"0.75em\")};\n  background-color: currentColor;\n  border-radius: 50%;\n  box-shadow: inset 0 -0.125em 0 0.25em ${black};\n  color: ${white};\n  position: absolute;\n  top: 2.25em;\n\n  &::before {\n    color: ${black};\n    content: \"\";\n    left: 50%;\n    position: absolute;\n    transform: translateX(-50%);\n  }\n`;\n\nconst LeftEye = styled(Eye)`\n  right: 2.25em;\n`;\n\nconst RightEye = styled(Eye)`\n  left: 2.25em;\n`;\n\nconst Brow = styled.div`\n  ${size(\"1em\", \"1.75em\")};\n  ${position(\"absolute\", null, null, \"0.625em\", \"50%\")}\n  border: 0.25em solid transparent;\n  border-bottom: none;\n  border-radius: 50% 50% 0 0;\n  border-top-color: currentColor;\n  color: ${black};\n  transform: translateX(-50%);\n  transform-origin: 0 0;\n`;\n\nconst LeftBrow = styled(Brow)`\n  border-right: none;\n`;\n\nconst RightBrow = styled(Brow)`\n  border-left: none;\n`;\n\nconst Mouth = styled.div`\n  ${size(\"1.5em\", \"2.5em\")};\n  ${position(\"absolute\", \"3.125em\", null, null, \"50%\")}\n  border: 0.25em solid transparent;\n  border-bottom-color: currentColor;\n  border-radius: 50%;\n  color: ${black};\n  transform: translateX(-50%);\n\n  &::before,\n  &::after {\n    content: \"\";\n    left: 50%;\n    position: absolute;\n    transform: translateX(-50%);\n  }\n`;\n\nconst ClassicFace = styled(Face)`\n  ${Eye} {\n    top: 2.4375em;\n    height: 0.75em;\n    color: ${black};\n    box-shadow: none;\n  }\n\n  ${Mouth} {\n    top: 2.9375em;\n  }\n`;\n\nconst SmileFace = styled(Face)`\n  ${Eye} {\n    top: 2.4375em;\n    height: 0.75em;\n    color: ${black};\n    box-shadow: none;\n  }\n\n  ${Mouth} {\n    top: 2.9375em;\n  }\n`;\n\nconst LargeSmileFace = styled(Face)`\n  ${Eye} {\n    top: 2em;\n  }\n\n  ${Brow} {\n    ${size(\"1.375em\", \"1.25em\")};\n    bottom: 0.375em;\n    border: none;\n    border-top: 0.25em solid;\n    border-radius: 50% 50% 0 0;\n  }\n\n  ${RightBrow} {\n    margin-left: -0.125em;\n    transform: skewY(-10deg) translateX(-50%) translateZ(0);\n  }\n\n  ${LeftBrow} {\n    margin-left: 0.125em;\n    transform: skewY(10deg) translateX(-50%) translateZ(0);\n  }\n\n  ${Mouth} {\n    ${size(\"5em\", \"3.125em\")};\n    top: 0.125em;\n    border: none;\n    border-bottom: 1.5em solid;\n    border-radius: 0 0 70% 70%/0 0 50% 50%;\n\n    &::before {\n      ${size(\"2em\", \"4.25em\")};\n      top: 1.6875em;\n      color: ${black};\n      border: 0.1875em solid transparent;\n      border-bottom-color: currentColor;\n      border-radius: 0 0 50% 50%;\n      box-shadow: 0 0.9375em 0 -0.75em ${white};\n    }\n\n    &::after {\n      ${size(\"0.375em\", \"1.25em\")};\n      top: 4.4375em;\n      color: ${red};\n      background-color: currentColor;\n      border-radius: 70% 70% 70% 70%/50% 50% 100% 100%;\n    }\n  }\n`;\n\nconst WorriedFace = styled(Face)`\n  ${Eye} {\n    ${size(\"1.125em\", \"1em\")};\n    top: 2.4375em;\n    box-shadow: inset 0 -0.125em 0 0.3125em ${black};\n  }\n\n  ${RightEye} {\n    left: 2.125em;\n  }\n\n  ${LeftEye} {\n    right: 2.125em;\n  }\n\n  ${Brow} {\n    ${size(\"0.875em\", \"1.25em\")};\n    bottom: 1.25em;\n    border-top: none;\n    border-bottom: 0.25em solid currentColor;\n    border-radius: 0 0 50% 50%;\n  }\n\n  ${RightBrow} {\n    margin-left: -0.25em;\n    transform: rotate(-20deg) translateX(-50%) translateZ(0);\n  }\n\n  ${LeftBrow} {\n    margin-left: 0.25em;\n    transform: rotate(20deg) translateX(-50%) translateZ(0);\n  }\n\n  ${Mouth} {\n    ${size(\"1.25em\", \"2em\")};\n    top: 4.5em;\n    transform: translateX(-50%) rotate(-10deg) translateZ(0);\n    border-top-color: currentColor;\n    border-right: none;\n    border-bottom-color: transparent;\n    border-right-width: 0.5em;\n    border-radius: 50% 50% 0 0;\n  }\n`;\n\nconst FrownFace = styled(Face)`\n  ${Eye} {\n    top: 2.625em;\n\n    &::before {\n      ${size(\"1em\", \"1.25em\")};\n      bottom: 80%;\n      border: 0.1875em solid transparent;\n      border-bottom-color: currentColor;\n      border-radius: 50%;\n    }\n  }\n\n  ${RightEye} {\n    &::before {\n      margin-left: -0.25em;\n      transform: translateX(-50%) rotate(-20deg);\n    }\n  }\n\n  ${LeftEye} {\n    &::before {\n      margin-left: 0.25em;\n      transform: translateX(-50%) rotate(20deg);\n    }\n  }\n\n  ${Brow} {\n    width: 1.5em;\n    bottom: 1.375em;\n    border-top: none;\n    border-bottom: 0.25em solid currentColor;\n    border-radius: 0 0 50% 50%;\n  }\n\n  ${RightBrow} {\n    margin-left: -0.625em;\n    transform: rotate(-35deg) translateX(-50%) translateZ(0);\n  }\n\n  ${LeftBrow} {\n    margin-left: 0.625em;\n    transform: rotate(35deg) translateX(-50%) translateZ(0);\n  }\n\n  ${Mouth} {\n    ${size(\"2em\", \"2.75em\")};\n    top: 4.25em;\n    margin-left: -0.125em;\n    transform: translateX(-50%) rotate(-15deg) translateZ(0);\n    border-top-color: currentColor;\n    border-right: none;\n    border-bottom-color: transparent;\n    border-right-width: 0.5em;\n    border-radius: 50% 50% 0 0;\n\n    &::before {\n      ${size(\"0.625em\", \"0.75em\")};\n      top: 0.375em;\n      margin-left: 0.125em;\n      color: ${black};\n      border: 0.125em solid transparent;\n      border-top-color: currentColor;\n      border-right: none;\n      border-radius: 50% 50% 0 0;\n    }\n  }\n`;\n\nconst SurprisedFace = styled(Face)`\n  ${Eye} {\n    ${size(\"1.125em\", \"1em\")};\n    top: 2.4375em;\n    box-shadow: inset 0 -0.125em 0 0.3125em ${black};\n  }\n\n  ${Brow} {\n    bottom: 1em;\n    width: 1.5em;\n    border-right: none;\n    border-left: none;\n  }\n\n  ${RightBrow} {\n    margin-left: -0.5em;\n    transform: rotate(-15deg) translateX(-50%) translateZ(0);\n  }\n\n  ${LeftBrow} {\n    margin-left: 0.5em;\n    transform: rotate(15deg) translateX(-50%) translateZ(0);\n  }\n\n  ${Mouth} {\n    ${size(\"1.625em\", \"3.125em\")};\n    top: 4em;\n    background-color: currentColor;\n    border: none;\n    border-radius: 70% 70% 60% 60%/100% 100% 50% 50%;\n\n    &::before,\n    &::after {\n      background-color: currentColor;\n      border-radius: 70% 70% 60% 60%/100% 100% 50% 50%;\n      color: ${white};\n      height: 0.375em;\n    }\n\n    &::before {\n      top: 0.1875em;\n      width: 2em;\n    }\n\n    &::after {\n      bottom: 0.1875em;\n      width: 2.25em;\n    }\n  }\n`;\n\nexport default {\n  classic: () => (\n    <ClassicFace>\n      <RightEye />\n      <LeftEye />\n      <Mouth />\n    </ClassicFace>\n  ),\n  smile: () => (\n    <SmileFace>\n      <RightEye>\n        <RightBrow />\n      </RightEye>\n      <LeftEye>\n        <LeftBrow />\n      </LeftEye>\n      <Mouth />\n    </SmileFace>\n  ),\n  smileLarge: () => (\n    <LargeSmileFace>\n      <RightEye>\n        <RightBrow />\n      </RightEye>\n      <LeftEye>\n        <LeftBrow />\n      </LeftEye>\n      <Mouth />\n    </LargeSmileFace>\n  ),\n  worried: () => (\n    <WorriedFace>\n      <RightEye>\n        <RightBrow />\n      </RightEye>\n      <LeftEye>\n        <LeftBrow />\n      </LeftEye>\n      <Mouth />\n    </WorriedFace>\n  ),\n  frown: () => (\n    <FrownFace>\n      <RightEye>\n        <RightBrow />\n      </RightEye>\n      <LeftEye>\n        <LeftBrow />\n      </LeftEye>\n      <Mouth />\n    </FrownFace>\n  ),\n  surprised: () => (\n    <SurprisedFace>\n      <RightEye>\n        <RightBrow />\n      </RightEye>\n      <LeftEye>\n        <LeftBrow />\n      </LeftEye>\n      <Mouth />\n    </SurprisedFace>\n  ),\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { UpperBody, Torso, RightArm, LeftArm, Hand } from \"./UpperBody\";\nimport { LowerBody, Waist, Crotch, LeftLeg, RightLeg } from \"./LowerBody\";\nimport FACES, { Head, FacesWrap, Faces } from \"./Faces\";\n\nconst MiniFigure = styled.div`\n  height: 485px;\n  margin: auto;\n  perspective: 200;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 400ms;\n  width: 300px;\n\n  &.explode {\n    transform: scale(0.75) translateZ(0);\n  }\n`;\n\nconst MiniFig = ({\n  isExploded,\n  expression,\n  lowerHue,\n  lowerSaturation,\n  lowerLightness,\n  upperHue,\n  upperSaturation,\n  upperLightness,\n}) => {\n  return (\n    <MiniFigure>\n      <Head\n        className=\"head\"\n        style={{\n          transform: `translate(-50%, ${isExploded ? \"-8em\" : 0})`,\n        }}\n      >\n        <FacesWrap className=\"faces-wrap\">\n          <Faces\n            className=\"faces\"\n            style={{\n              transform: isExploded\n                ? \"translateX(-500%)\"\n                : `translateX(-${expression}%)`,\n            }}\n          >\n            {Object.entries(FACES).map(([key, Face]) => (\n              <Face {...{ key }} />\n            ))}\n          </Faces>\n        </FacesWrap>\n      </Head>\n      <UpperBody\n        style={{\n          color: `hsl(${upperHue},${upperSaturation}%,${upperLightness}%)`,\n        }}\n      >\n        <Torso />\n        <RightArm>\n          <Hand />\n        </RightArm>\n        <LeftArm>\n          <Hand />\n        </LeftArm>\n      </UpperBody>\n      <LowerBody\n        {...{ isExploded }}\n        style={{\n          color: `hsl(${lowerHue},${lowerSaturation}%,${lowerLightness}%)`,\n        }}\n      >\n        <Waist />\n        <Crotch />\n        <RightLeg />\n        <LeftLeg />\n      </LowerBody>\n    </MiniFigure>\n  );\n};\n\nMiniFig.propTypes = {\n  isExploded: PropTypes.bool.isRequired,\n  expression: PropTypes.number.isRequired,\n  lowerHue: PropTypes.number.isRequired,\n  lowerSaturation: PropTypes.number.isRequired,\n  lowerLightness: PropTypes.number.isRequired,\n  upperHue: PropTypes.number.isRequired,\n  upperSaturation: PropTypes.number.isRequired,\n  upperLightness: PropTypes.number.isRequired,\n};\n\nexport default MiniFig;\n","import React, { useState } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport MiniFig from \"./components/MiniFig\";\nimport { defaultSliderValues } from \"./utils/constants\";\n\nconst App = () => {\n  const [values, setValues] = useState({\n    ...defaultSliderValues,\n  });\n  const [isExploded, setIsExploded] = useState(false);\n\n  return (\n    <main\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        height: \"100vh\",\n      }}\n    >\n      <MiniFig {...{ ...values, isExploded }} />\n      <Sidebar {...{ values, setValues, isExploded, setIsExploded }} />\n    </main>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Theme from \"./theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"typeface-montserrat\";\n\nReactDOM.render(\n  <Theme>\n    <App />\n  </Theme>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}